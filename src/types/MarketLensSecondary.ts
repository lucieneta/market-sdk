/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface MarketLensSecondary extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): MarketLensSecondary;
  clone(): MarketLensSecondary;
  methods: {
    getMaxBorrow(
      account: string,
      cTokenModify: string
    ): NonPayableTransactionObject<string>;

    getMaxRedeem(
      account: string,
      cTokenModify: string
    ): NonPayableTransactionObject<string>;

    getPoolOwnership(comptroller: string): NonPayableTransactionObject<{
      0: string;
      1: boolean;
      2: boolean;
      3: [string, string, boolean, boolean][];
    }>;

    getRewardSpeedsByPool(comptroller: string): NonPayableTransactionObject<{
      0: string[];
      1: string[];
      2: string[];
      3: string[][];
      4: string[][];
    }>;

    getRewardSpeedsByPools(
      comptrollers: string[]
    ): NonPayableTransactionObject<{
      0: string[][];
      1: string[][];
      2: string[][];
      3: string[][][];
      4: string[][][];
    }>;

    getRewardsDistributorsBySupplier(
      directory: string,
      supplier: string
    ): NonPayableTransactionObject<{
      0: string[];
      1: string[];
      2: string[][];
    }>;

    getUnclaimedRewardsByDistributors(
      holder: string,
      distributors: string[]
    ): NonPayableTransactionObject<{
      0: string[];
      1: string[];
      2: string[][];
      3: string[][][];
      4: string[];
    }>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
